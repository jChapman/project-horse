-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.abilities
(
    ability_name text COLLATE pg_catalog."default" NOT NULL,
    icon text COLLATE pg_catalog."default",
    is_ultimate boolean,
    CONSTRAINT abilities_pkey PRIMARY KEY (ability_name)
);

CREATE TABLE IF NOT EXISTS public.combat_players
(
    combat_results_id integer,
    steam_id text COLLATE pg_catalog."default",
    damage_taken integer,
    ghost boolean
);

CREATE TABLE IF NOT EXISTS public.combat_results
(
    combat_results_id integer NOT NULL DEFAULT nextval('combat_results_combat_results_id_seq'::regclass),
    game_id text COLLATE pg_catalog."default",
    duration double precision NOT NULL,
    round_number integer NOT NULL,
    CONSTRAINT combat_results_pkey PRIMARY KEY (combat_results_id)
);

CREATE TABLE IF NOT EXISTS public.game_player_heroes
(
    game_player_hero_id integer NOT NULL DEFAULT nextval('game_player_heroes_game_player_hero_id_seq'::regclass),
    game_player_id integer,
    hero_name text COLLATE pg_catalog."default" NOT NULL,
    tier integer NOT NULL,
    total_damage_dealt integer,
    total_physical_damage integer,
    total_magical_damage integer,
    total_damage_taken integer,
    total_healing integer,
    total_healed integer,
    CONSTRAINT game_player_heroes_pkey PRIMARY KEY (game_player_hero_id)
);

CREATE TABLE IF NOT EXISTS public.game_players
(
    game_player_id integer NOT NULL DEFAULT nextval('game_players_game_player_id_seq'::regclass),
    game_id text COLLATE pg_catalog."default",
    steam_id text COLLATE pg_catalog."default",
    rounds integer,
    wins integer,
    losses integer,
    end_time double precision,
    place integer,
    team integer,
    god text COLLATE pg_catalog."default",
    total_level integer,
    mmr integer,
    mmr_change integer DEFAULT 0,
    ladder_mmr_change integer DEFAULT 0,
    coins_change integer DEFAULT 0,
    xp_change integer DEFAULT 0,
    CONSTRAINT game_players_pkey PRIMARY KEY (game_player_id)
);

CREATE TABLE IF NOT EXISTS public.games
(
    game_id text COLLATE pg_catalog."default" NOT NULL,
    rounds integer,
    ranked boolean,
    duration double precision,
    cheats_enabled boolean,
    environment text COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT now(),
    end_time timestamp with time zone,
    CONSTRAINT games_pkey PRIMARY KEY (game_id)
);

CREATE TABLE IF NOT EXISTS public.gods
(
    god_name text COLLATE pg_catalog."default" NOT NULL,
    free boolean DEFAULT false,
    plus_exclusive boolean DEFAULT false,
    god_enabled boolean DEFAULT true,
    CONSTRAINT gods_pkey PRIMARY KEY (god_name)
);

CREATE TABLE IF NOT EXISTS public.hero_abilities
(
    game_player_hero_id integer,
    ability_name text COLLATE pg_catalog."default",
    ability_level integer,
    slot_index integer
);

CREATE TABLE IF NOT EXISTS public.player_gods
(
    god_name text COLLATE pg_catalog."default" NOT NULL,
    steam_id text COLLATE pg_catalog."default" NOT NULL,
    banned boolean DEFAULT false,
    progress integer DEFAULT 0,
    amount_required integer DEFAULT 100,
    CONSTRAINT player_gods_pkey PRIMARY KEY (god_name, steam_id)
);

CREATE TABLE IF NOT EXISTS public.player_logs
(
    steam_id text COLLATE pg_catalog."default",
    log_event text COLLATE pg_catalog."default" NOT NULL,
    log_data json,
    log_time timestamp with time zone DEFAULT now()
);

CREATE TABLE IF NOT EXISTS public.players
(
    steam_id text COLLATE pg_catalog."default" NOT NULL,
    username text COLLATE pg_catalog."default",
    profile_picture text COLLATE pg_catalog."default",
    mmr integer DEFAULT 1000,
    ladder_mmr integer DEFAULT 0,
    coins integer DEFAULT 0,
    user_type text COLLATE pg_catalog."default" DEFAULT 'USER'::text,
    patreon_level integer DEFAULT 0,
    plus_expiration timestamp with time zone,
    last_login_quest_claimed timestamp with time zone,
    last_ping timestamp with time zone,
    created_at timestamp with time zone DEFAULT now(),
    CONSTRAINT players_pkey PRIMARY KEY (steam_id)
);

ALTER TABLE IF EXISTS public.combat_players
    ADD CONSTRAINT combat_players_combat_results_id_fkey FOREIGN KEY (combat_results_id)
    REFERENCES public.combat_results (combat_results_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.combat_players
    ADD CONSTRAINT combat_players_steam_id_fkey FOREIGN KEY (steam_id)
    REFERENCES public.players (steam_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.combat_results
    ADD CONSTRAINT combat_results_game_id_fkey FOREIGN KEY (game_id)
    REFERENCES public.games (game_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_combat_results_game_id
    ON public.combat_results(game_id);


ALTER TABLE IF EXISTS public.game_player_heroes
    ADD CONSTRAINT game_player_heroes_game_player_id_fkey FOREIGN KEY (game_player_id)
    REFERENCES public.game_players (game_player_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_game_player_heroes_game_player_id
    ON public.game_player_heroes(game_player_id);


ALTER TABLE IF EXISTS public.game_players
    ADD CONSTRAINT game_players_game_id_fkey FOREIGN KEY (game_id)
    REFERENCES public.games (game_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_game_players_game_id_fkey
    ON public.game_players(game_id);


ALTER TABLE IF EXISTS public.game_players
    ADD CONSTRAINT game_players_steam_id_fkey FOREIGN KEY (steam_id)
    REFERENCES public.players (steam_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.hero_abilities
    ADD CONSTRAINT hero_abilities_ability_name_fkey FOREIGN KEY (ability_name)
    REFERENCES public.abilities (ability_name) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_hero_abilities_ability_name
    ON public.hero_abilities(ability_name);


ALTER TABLE IF EXISTS public.hero_abilities
    ADD CONSTRAINT hero_abilities_game_player_hero_id_fkey FOREIGN KEY (game_player_hero_id)
    REFERENCES public.game_player_heroes (game_player_hero_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.player_gods
    ADD CONSTRAINT player_gods_god_name_fkey FOREIGN KEY (god_name)
    REFERENCES public.gods (god_name) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.player_gods
    ADD CONSTRAINT player_gods_steam_id_fkey FOREIGN KEY (steam_id)
    REFERENCES public.players (steam_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_player_gods_steam_id_fkey
    ON public.player_gods(steam_id);


ALTER TABLE IF EXISTS public.player_logs
    ADD CONSTRAINT player_logs_steam_id_fkey FOREIGN KEY (steam_id)
    REFERENCES public.players (steam_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "IDX_player_steam_id"
    ON public.player_logs(steam_id);

END;